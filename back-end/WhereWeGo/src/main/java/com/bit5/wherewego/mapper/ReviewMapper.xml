<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.bit5.wherewego.review.ReviewDAOImp">

	<!-- 리뷰리스트 -->
	<select id="reviewAllSelect" resultType="com.bit5.wherewego.review.ReviewVO">
	
		 select * from 
		(select * from 
		(select r.grade, to_char(r.writedate, 'MM/DD') writedate, r.score, r.r_num, r.res_num, n.c_num, n.name, to_char(n.resdate, 'MM/DD') resdate, n.userid from review r join 
		(select r.res_num, r.c_num, c.name, r.resdate, r.userid from res r join course c on r.c_num=c.c_num
		<if test='param4!=null and !param4.equals("") and param3.equals("name")'>
		where c.name like '%'||#{param4, jdbcType=VARCHAR}||'%'
		</if>
		<if test='param4!=null and !param4.equals("") and param3.equals("userid")'>
		where r.userid like '%'||#{param4, jdbcType=VARCHAR}||'%'
		</if>
		) n on r.res_num=n.res_num order by r_num desc
		)
		<![CDATA[ 
		where rownum<=#{param1} order by r_num asc) 
		where rownum<=#{param2} order by r_num desc
		]]>
	</select>

	<!-- 리뷰리스트 페이징 -->
	<select id="totalReviewCount" resultType="int">
		select count(r_num) from review r join 
		(select r.res_num, r.userid, r.c_num, c.name from res r join course c on r.c_num=c.c_num	
		<if test='param2!=null and !param2.equals("") and param1.equals("name")'>
		where c.name like '%'||#{param2, jdbcType=VARCHAR}||'%' 
		</if>
		<if test='param2!=null and !param2.equals("") and param1.equals("userid")'>
		where r.userid like '%'||#{param2, jdbcType=VARCHAR}||'%' 
		</if>
		) n
		on r.res_num=n.res_num order by r_num desc
	</select>

	<!-- 베스트리뷰 -->
	<select id="selectBestReviews"
		resultType="com.bit5.wherewego.review.ReviewVO">
    select r.r_num r_num, r.score score, r.info info, to_char(r.writedate,'YY/MM/DD') writedate, r.photo photo, n.name name, n.userid userid, to_char(n.resdate,'YY/MM/DD') resdate, r.grade grade 
		from review r 
		join (select e.res_num, c.name, e.userid, e.resdate from res e join course c on e.c_num=c.c_num) n 
		on r.res_num=n.res_num and r.grade='공개' order by r.score desc , r.writedate asc
	</select>

	<!-- 새로운리뷰카운트 -->
	<select id="newReviewCount" resultType="int">
		select count(r_num)
		newReview from review where to_char(writedate,'YY/MM/DD') = to_char(sysdate,'YY/MM/DD')
	</select>
	
	<!-- 내가 작성한 리뷰 -->
	<select id="myReviewSelect" resultType="com.bit5.wherewego.review.ReviewVO">
		select r.r_num r_num, r.score score, r.info info, to_char(r.writedate,'YY/MM/DD') writedate, r.photo photo, n.name name, n.userid userid, to_char(n.resdate,'YY/MM/DD') resdate, r.grade grade 
		from review r 
		join (select e.res_num, c.name, e.userid, e.resdate from res e join course c on e.c_num=c.c_num) n 
		on r.res_num=n.res_num and userid=#{param1} order by r.writedate asc
	</select>
	
	<!-- 리뷰 보기 -->
	<select id="reviewView" resultType="com.bit5.wherewego.review.ReviewVO">
	  select r.r_num, r.score, r.info, r.writedate, r.photo, n.name, n.userid, to_char(n.resdate,'YY/MM/DD') resdate, r.grade 
      from review r 
      join (select e.res_num, c.name, e.userid, e.resdate from res e join course c on e.c_num=c.c_num) n 
      on r.res_num=n.res_num and r_num=#{param1} order by r.writedate asc
	</select>
	<!-- 공개 비공개 -->
	<update id="reViewgradech" parameterType="com.bit5.wherewego.review.ReviewVO">
		update review set 
		<if test='grade.equals("공개")'>grade='비공개'</if> 
		<if test='grade.equals("비공개")'>grade='공개'</if> 
		where r_num=${r_num} 
	</update>

</mapper>
